name: (NodeJS) Push Image and upload Artifacts

# Policies run job in branches
on:
  workflow_call:
    inputs:
      reusable_runner_name:
        description: 'Declare runner name to steps'
        required: true
        type: string
      reusable_container_runner_image:
        description: 'Declare container runner image to steps'
        required: true
        type: string
      reusable_docker_registry_url:
        description: 'URL of the Docker registry where images are stored'
        required: true
        type: string
      reusable_docker_registry_username:
        description: 'Username for accessing the Docker registry'
        required: true
        type: string
      reusable_docker_registry_password:
        description: 'Password for accessing the Docker registry'
        required: true
        type: string

jobs:

  reusable_push_image_container:
    name: Push container image
    runs-on: ${{ inputs.reusable_runner_name }}
    container:
      image: ${{ inputs.reusable_container_runner_image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact image
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.run_id }}-image-${{ github.sha }}

      # - name: Login Docker Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ inputs.reusable_docker_registry_url }}
      #     username: ${{ inputs.reusable_docker_registry_username }}
      #     password: ${{ inputs.reusable_docker_registry_password }}
      #     logout: true

      - name: Load Docker image
        run: docker load -i ./image-app.tar

      - name: Load Docker image
        run: docker image ls

      # - name: Tag Docker image
      #   run: docker tag ${{ github.repository }}:latest ${{ inputs.reusable_docker_registry_nexus_url }}/${{ github.repository }}:latest

      # - name: Push Docker image to Nexus
      #   run: docker push ${{ inputs.reusable_docker_registry_nexus_url }}/${{ github.repository }}:latest
      
  # reusable_upload_helm_chart_package:
  #   name: Upload helm chart package
  #   runs-on: ${{ inputs.reusable_runner_name }}
  #   container:
  #     image: ${{ inputs.reusable_container_runner_image }}
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Download artifact chart
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: ${{ github.run_id }}-chart-${{ github.sha }}

  #     - name: Validate URL
  #       run: |
  #         URL="${{ inputs.reusable_nexus_repository_helm_url }}"
  #         STATUS_CODE=$(curl -o /dev/null -s -w "%{http_code}\n" "$URL")
  #         echo "Status code: $STATUS_CODE"
  #         if [ "$STATUS_CODE" -eq 200 ]; then
  #           echo "Comunicação bem-sucedida!"
  #         else
  #           echo "Falha na comunicação. Status code: $STATUS_CODE"
  #           exit 1
  #           fi

      # - name: Upload package to Nexus Sonatype
      #   run: |
      #     curl -v -u ${{ secrets.NEXUS_HELM_USERNAME }}:${{ secrets.NEXUS_HELM_PASSWORD }} --upload-file ./app-sample-0.1.0.tgz ${{ inputs.reusable_nexus_repository_helm_url }}"/app-sample-0.1.0.tgz"